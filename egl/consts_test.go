package egl

import "testing"

func TestAttribs(t *testing.T) {
	t.Log("Checking Attribs")
	for i, a := range AttribTab {
		if a.GoAttrib != a.CAttrib {
			t.Errorf("Test(%v): %X != %X", i, a.GoAttrib, a.CAttrib)
		}
	}
}

var AttribTab = []struct{ GoAttrib, CAttrib int }{
	{VERSION_1_0, _EGL_VERSION_1_0},
	{VERSION_1_1, _EGL_VERSION_1_1},
	{VERSION_1_2, _EGL_VERSION_1_2},
	{VERSION_1_3, _EGL_VERSION_1_3},
	{VERSION_1_4, _EGL_VERSION_1_4},
	{DONT_CARE, _EGL_DONT_CARE},
	{BUFFER_SIZE, _EGL_BUFFER_SIZE},
	{ALPHA_SIZE, _EGL_ALPHA_SIZE},
	{BLUE_SIZE, _EGL_BLUE_SIZE},
	{GREEN_SIZE, _EGL_GREEN_SIZE},
	{RED_SIZE, _EGL_RED_SIZE},
	{DEPTH_SIZE, _EGL_DEPTH_SIZE},
	{STENCIL_SIZE, _EGL_STENCIL_SIZE},
	{CONFIG_CAVEAT, _EGL_CONFIG_CAVEAT},
	{CONFIG_ID, _EGL_CONFIG_ID},
	{LEVEL, _EGL_LEVEL},
	{MAX_PBUFFER_HEIGHT, _EGL_MAX_PBUFFER_HEIGHT},
	{MAX_PBUFFER_PIXELS, _EGL_MAX_PBUFFER_PIXELS},
	{MAX_PBUFFER_WIDTH, _EGL_MAX_PBUFFER_WIDTH},
	{NATIVE_RENDERABLE, _EGL_NATIVE_RENDERABLE},
	{NATIVE_VISUAL_ID, _EGL_NATIVE_VISUAL_ID},
	{NATIVE_VISUAL_TYPE, _EGL_NATIVE_VISUAL_TYPE},
	{SAMPLES, _EGL_SAMPLES},
	{SAMPLE_BUFFERS, _EGL_SAMPLE_BUFFERS},
	{SURFACE_TYPE, _EGL_SURFACE_TYPE},
	{TRANSPARENT_TYPE, _EGL_TRANSPARENT_TYPE},
	{TRANSPARENT_BLUE_VALUE, _EGL_TRANSPARENT_BLUE_VALUE},
	{TRANSPARENT_GREEN_VALUE, _EGL_TRANSPARENT_GREEN_VALUE},
	{TRANSPARENT_RED_VALUE, _EGL_TRANSPARENT_RED_VALUE},
	{NONE, _EGL_NONE},
	{BIND_TO_TEXTURE_RGB, _EGL_BIND_TO_TEXTURE_RGB},
	{BIND_TO_TEXTURE_RGBA, _EGL_BIND_TO_TEXTURE_RGBA},
	{MIN_SWAP_INTERVAL, _EGL_MIN_SWAP_INTERVAL},
	{MAX_SWAP_INTERVAL, _EGL_MAX_SWAP_INTERVAL},
	{LUMINANCE_SIZE, _EGL_LUMINANCE_SIZE},
	{ALPHA_MASK_SIZE, _EGL_ALPHA_MASK_SIZE},
	{COLOR_BUFFER_TYPE, _EGL_COLOR_BUFFER_TYPE},
	{RENDERABLE_TYPE, _EGL_RENDERABLE_TYPE},
	{MATCH_NATIVE_PIXMAP, _EGL_MATCH_NATIVE_PIXMAP},
	{CONFORMANT, _EGL_CONFORMANT},
	{SLOW_CONFIG, _EGL_SLOW_CONFIG},
	{NON_CONFORMANT_CONFIG, _EGL_NON_CONFORMANT_CONFIG},
	{TRANSPARENT_RGB, _EGL_TRANSPARENT_RGB},
	{RGB_BUFFER, _EGL_RGB_BUFFER},
	{LUMINANCE_BUFFER, _EGL_LUMINANCE_BUFFER},
	{NO_TEXTURE, _EGL_NO_TEXTURE},
	{TEXTURE_RGB, _EGL_TEXTURE_RGB},
	{TEXTURE_RGBA, _EGL_TEXTURE_RGBA},
	{TEXTURE_2D, _EGL_TEXTURE_2D},
	{PBUFFER_BIT, _EGL_PBUFFER_BIT},
	{PIXMAP_BIT, _EGL_PIXMAP_BIT},
	{WINDOW_BIT, _EGL_WINDOW_BIT},
	{VG_COLORSPACE_LINEAR_BIT, _EGL_VG_COLORSPACE_LINEAR_BIT},
	{VG_ALPHA_FORMAT_PRE_BIT, _EGL_VG_ALPHA_FORMAT_PRE_BIT},
	{MULTISAMPLE_RESOLVE_BOX_BIT, _EGL_MULTISAMPLE_RESOLVE_BOX_BIT},
	{SWAP_BEHAVIOR_PRESERVED_BIT, _EGL_SWAP_BEHAVIOR_PRESERVED_BIT},
	{OPENGL_ES_BIT, _EGL_OPENGL_ES_BIT},
	{OPENVG_BIT, _EGL_OPENVG_BIT},
	{OPENGL_ES2_BIT, _EGL_OPENGL_ES2_BIT},
	{OPENGL_BIT, _EGL_OPENGL_BIT},
	{VENDOR, _EGL_VENDOR},
	{VERSION, _EGL_VERSION},
	{EXTENSIONS, _EGL_EXTENSIONS},
	{CLIENT_APIS, _EGL_CLIENT_APIS},
	{HEIGHT, _EGL_HEIGHT},
	{WIDTH, _EGL_WIDTH},
	{LARGEST_PBUFFER, _EGL_LARGEST_PBUFFER},
	{TEXTURE_FORMAT, _EGL_TEXTURE_FORMAT},
	{TEXTURE_TARGET, _EGL_TEXTURE_TARGET},
	{MIPMAP_TEXTURE, _EGL_MIPMAP_TEXTURE},
	{MIPMAP_LEVEL, _EGL_MIPMAP_LEVEL},
	{RENDER_BUFFER, _EGL_RENDER_BUFFER},
	{VG_COLORSPACE, _EGL_VG_COLORSPACE},
	{VG_ALPHA_FORMAT, _EGL_VG_ALPHA_FORMAT},
	{HORIZONTAL_RESOLUTION, _EGL_HORIZONTAL_RESOLUTION},
	{VERTICAL_RESOLUTION, _EGL_VERTICAL_RESOLUTION},
	{PIXEL_ASPECT_RATIO, _EGL_PIXEL_ASPECT_RATIO},
	{SWAP_BEHAVIOR, _EGL_SWAP_BEHAVIOR},
	{MULTISAMPLE_RESOLVE, _EGL_MULTISAMPLE_RESOLVE},
	{BACK_BUFFER, _EGL_BACK_BUFFER},
	{SINGLE_BUFFER, _EGL_SINGLE_BUFFER},
	{VG_COLORSPACE_sRGB, _EGL_VG_COLORSPACE_sRGB},
	{VG_COLORSPACE_LINEAR, _EGL_VG_COLORSPACE_LINEAR},
	{VG_ALPHA_FORMAT_NONPRE, _EGL_VG_ALPHA_FORMAT_NONPRE},
	{VG_ALPHA_FORMAT_PRE, _EGL_VG_ALPHA_FORMAT_PRE},
	{DISPLAY_SCALING, _EGL_DISPLAY_SCALING},
	{UNKNOWN, _EGL_UNKNOWN},
	{BUFFER_PRESERVED, _EGL_BUFFER_PRESERVED},
	{BUFFER_DESTROYED, _EGL_BUFFER_DESTROYED},
	{OPENVG_IMAGE, _EGL_OPENVG_IMAGE},
	{CONTEXT_CLIENT_TYPE, _EGL_CONTEXT_CLIENT_TYPE},
	{CONTEXT_CLIENT_VERSION, _EGL_CONTEXT_CLIENT_VERSION},
	{MULTISAMPLE_RESOLVE_DEFAULT, _EGL_MULTISAMPLE_RESOLVE_DEFAULT},
	{MULTISAMPLE_RESOLVE_BOX, _EGL_MULTISAMPLE_RESOLVE_BOX},
	{OPENGL_ES_API, _EGL_OPENGL_ES_API},
	{OPENVG_API, _EGL_OPENVG_API},
	{OPENGL_API, _EGL_OPENGL_API},
	{DRAW, _EGL_DRAW},
	{READ, _EGL_READ},
	{CORE_NATIVE_ENGINE, _EGL_CORE_NATIVE_ENGINE},
	{COLORSPACE, _EGL_COLORSPACE},
	{ALPHA_FORMAT, _EGL_ALPHA_FORMAT},
	{COLORSPACE_sRGB, _EGL_COLORSPACE_sRGB},
	{COLORSPACE_LINEAR, _EGL_COLORSPACE_LINEAR},
	{ALPHA_FORMAT_NONPRE, _EGL_ALPHA_FORMAT_NONPRE},
	{ALPHA_FORMAT_PRE, _EGL_ALPHA_FORMAT_PRE},
}

func TestErrors(t *testing.T) {
	t.Log("Checking Errors")
	for i, errs := range ErrTab {
		if errs.GoErr != errs.CErr {
			t.Errorf("Test(%v): %X != %X", i, errs.GoErr, errs.CErr)
		}
	}
}

var ErrTab = []struct{ GoErr, CErr int }{
	{int(SUCCESS), int(_EGL_SUCCESS)},
	{int(NOT_INITIALIZED), int(_EGL_NOT_INITIALIZED)},
	{int(BAD_ACCESS), int(_EGL_BAD_ACCESS)},
	{int(BAD_ALLOC), int(_EGL_BAD_ALLOC)},
	{int(BAD_ATTRIBUTE), int(_EGL_BAD_ATTRIBUTE)},
	{int(BAD_CONFIG), int(_EGL_BAD_CONFIG)},
	{int(BAD_CONTEXT), int(_EGL_BAD_CONTEXT)},
	{int(BAD_CURRENT_SURFACE), int(_EGL_BAD_CURRENT_SURFACE)},
	{int(BAD_DISPLAY), int(_EGL_BAD_DISPLAY)},
	{int(BAD_MATCH), int(_EGL_BAD_MATCH)},
	{int(BAD_NATIVE_PIXMAP), int(_EGL_BAD_NATIVE_PIXMAP)},
	{int(BAD_NATIVE_WINDOW), int(_EGL_BAD_NATIVE_WINDOW)},
	{int(BAD_PARAMETER), int(_EGL_BAD_PARAMETER)},
	{int(BAD_SURFACE), int(_EGL_BAD_SURFACE)},
	{int(CONTEXT_LOST), int(_EGL_CONTEXT_LOST)},
}

/*
Inflined #defines from egl.h

TODO(Mortdeus): auto generate these values from the c headers using cgo's godef tool.
*/
const (
	_EGL_VERSION_1_0 = 1
	_EGL_VERSION_1_1 = 1
	_EGL_VERSION_1_2 = 1
	_EGL_VERSION_1_3 = 1
	_EGL_VERSION_1_4 = 1

	_EGL_DONT_CARE                   = -1
	_EGL_SUCCESS                     = 0x3000
	_EGL_NOT_INITIALIZED             = 0x3001
	_EGL_BAD_ACCESS                  = 0x3002
	_EGL_BAD_ALLOC                   = 0x3003
	_EGL_BAD_ATTRIBUTE               = 0x3004
	_EGL_BAD_CONFIG                  = 0x3005
	_EGL_BAD_CONTEXT                 = 0x3006
	_EGL_BAD_CURRENT_SURFACE         = 0x3007
	_EGL_BAD_DISPLAY                 = 0x3008
	_EGL_BAD_MATCH                   = 0x3009
	_EGL_BAD_NATIVE_PIXMAP           = 0x300A
	_EGL_BAD_NATIVE_WINDOW           = 0x300B
	_EGL_BAD_PARAMETER               = 0x300C
	_EGL_BAD_SURFACE                 = 0x300D
	_EGL_CONTEXT_LOST                = 0x300E /* EGL 1.1 - IMG_power_management */
	_EGL_BUFFER_SIZE                 = 0x3020
	_EGL_ALPHA_SIZE                  = 0x3021
	_EGL_BLUE_SIZE                   = 0x3022
	_EGL_GREEN_SIZE                  = 0x3023
	_EGL_RED_SIZE                    = 0x3024
	_EGL_DEPTH_SIZE                  = 0x3025
	_EGL_STENCIL_SIZE                = 0x3026
	_EGL_CONFIG_CAVEAT               = 0x3027
	_EGL_CONFIG_ID                   = 0x3028
	_EGL_LEVEL                       = 0x3029
	_EGL_MAX_PBUFFER_HEIGHT          = 0x302A
	_EGL_MAX_PBUFFER_PIXELS          = 0x302B
	_EGL_MAX_PBUFFER_WIDTH           = 0x302C
	_EGL_NATIVE_RENDERABLE           = 0x302D
	_EGL_NATIVE_VISUAL_ID            = 0x302E
	_EGL_NATIVE_VISUAL_TYPE          = 0x302F
	_EGL_SAMPLES                     = 0x3031
	_EGL_SAMPLE_BUFFERS              = 0x3032
	_EGL_SURFACE_TYPE                = 0x3033
	_EGL_TRANSPARENT_TYPE            = 0x3034
	_EGL_TRANSPARENT_BLUE_VALUE      = 0x3035
	_EGL_TRANSPARENT_GREEN_VALUE     = 0x3036
	_EGL_TRANSPARENT_RED_VALUE       = 0x3037
	_EGL_NONE                        = 0x3038 /* Attrib list terminator */
	_EGL_BIND_TO_TEXTURE_RGB         = 0x3039
	_EGL_BIND_TO_TEXTURE_RGBA        = 0x303A
	_EGL_MIN_SWAP_INTERVAL           = 0x303B
	_EGL_MAX_SWAP_INTERVAL           = 0x303C
	_EGL_LUMINANCE_SIZE              = 0x303D
	_EGL_ALPHA_MASK_SIZE             = 0x303E
	_EGL_COLOR_BUFFER_TYPE           = 0x303F
	_EGL_RENDERABLE_TYPE             = 0x3040
	_EGL_MATCH_NATIVE_PIXMAP         = 0x3041 /* Pseudo-attribute (not queryable) */
	_EGL_CONFORMANT                  = 0x3042
	_EGL_SLOW_CONFIG                 = 0x3050 /* EGL_CONFIG_CAVEAT value */
	_EGL_NON_CONFORMANT_CONFIG       = 0x3051 /* EGL_CONFIG_CAVEAT value */
	_EGL_TRANSPARENT_RGB             = 0x3052 /* EGL_TRANSPARENT_TYPE value */
	_EGL_RGB_BUFFER                  = 0x308E /* EGL_COLOR_BUFFER_TYPE value */
	_EGL_LUMINANCE_BUFFER            = 0x308F /* EGL_COLOR_BUFFER_TYPE value */
	_EGL_NO_TEXTURE                  = 0x305C
	_EGL_TEXTURE_RGB                 = 0x305D
	_EGL_TEXTURE_RGBA                = 0x305E
	_EGL_TEXTURE_2D                  = 0x305F
	_EGL_PBUFFER_BIT                 = 0x0001 /* EGL_SURFACE_TYPE mask bits */
	_EGL_PIXMAP_BIT                  = 0x0002 /* EGL_SURFACE_TYPE mask bits */
	_EGL_WINDOW_BIT                  = 0x0004 /* EGL_SURFACE_TYPE mask bits */
	_EGL_VG_COLORSPACE_LINEAR_BIT    = 0x0020 /* EGL_SURFACE_TYPE mask bits */
	_EGL_VG_ALPHA_FORMAT_PRE_BIT     = 0x0040 /* EGL_SURFACE_TYPE mask bits */
	_EGL_MULTISAMPLE_RESOLVE_BOX_BIT = 0x0200 /* EGL_SURFACE_TYPE mask bits */
	_EGL_SWAP_BEHAVIOR_PRESERVED_BIT = 0x0400 /* EGL_SURFACE_TYPE mask bits */
	_EGL_OPENGL_ES_BIT               = 0x0001 /* EGL_RENDERABLE_TYPE mask bits */
	_EGL_OPENVG_BIT                  = 0x0002 /* EGL_RENDERABLE_TYPE mask bits */
	_EGL_OPENGL_ES2_BIT              = 0x0004 /* EGL_RENDERABLE_TYPE mask bits */
	_EGL_OPENGL_BIT                  = 0x0008 /* EGL_RENDERABLE_TYPE mask bits */
	_EGL_VENDOR                      = 0x3053
	_EGL_VERSION                     = 0x3054
	_EGL_EXTENSIONS                  = 0x3055
	_EGL_CLIENT_APIS                 = 0x308D
	_EGL_HEIGHT                      = 0x3056
	_EGL_WIDTH                       = 0x3057
	_EGL_LARGEST_PBUFFER             = 0x3058
	_EGL_TEXTURE_FORMAT              = 0x3080
	_EGL_TEXTURE_TARGET              = 0x3081
	_EGL_MIPMAP_TEXTURE              = 0x3082
	_EGL_MIPMAP_LEVEL                = 0x3083
	_EGL_RENDER_BUFFER               = 0x3086
	_EGL_VG_COLORSPACE               = 0x3087
	_EGL_VG_ALPHA_FORMAT             = 0x3088
	_EGL_HORIZONTAL_RESOLUTION       = 0x3090
	_EGL_VERTICAL_RESOLUTION         = 0x3091
	_EGL_PIXEL_ASPECT_RATIO          = 0x3092
	_EGL_SWAP_BEHAVIOR               = 0x3093
	_EGL_MULTISAMPLE_RESOLVE         = 0x3099
	_EGL_BACK_BUFFER                 = 0x3084
	_EGL_SINGLE_BUFFER               = 0x3085
	_EGL_VG_COLORSPACE_sRGB          = 0x3089 /* EGL_VG_COLORSPACE value */
	_EGL_VG_COLORSPACE_LINEAR        = 0x308A /* EGL_VG_COLORSPACE value */
	_EGL_VG_ALPHA_FORMAT_NONPRE      = 0x308B /* EGL_ALPHA_FORMAT value */
	_EGL_VG_ALPHA_FORMAT_PRE         = 0x308C /* EGL_ALPHA_FORMAT value */
	_EGL_DISPLAY_SCALING             = 10000
	_EGL_UNKNOWN                     = -1
	_EGL_BUFFER_PRESERVED            = 0x3094 /* EGL_SWAP_BEHAVIOR value */
	_EGL_BUFFER_DESTROYED            = 0x3095 /* EGL_SWAP_BEHAVIOR value */
	_EGL_OPENVG_IMAGE                = 0x3096
	_EGL_CONTEXT_CLIENT_TYPE         = 0x3097
	_EGL_CONTEXT_CLIENT_VERSION      = 0x3098
	_EGL_MULTISAMPLE_RESOLVE_DEFAULT = 0x309A /* EGL_MULTISAMPLE_RESOLVE value */
	_EGL_MULTISAMPLE_RESOLVE_BOX     = 0x309B /* EGL_MULTISAMPLE_RESOLVE value */
	_EGL_OPENGL_ES_API               = 0x30A0
	_EGL_OPENVG_API                  = 0x30A1
	_EGL_OPENGL_API                  = 0x30A2
	_EGL_DRAW                        = 0x3059
	_EGL_READ                        = 0x305A
	_EGL_CORE_NATIVE_ENGINE          = 0x305B
	_EGL_COLORSPACE                  = _EGL_VG_COLORSPACE
	_EGL_ALPHA_FORMAT                = _EGL_VG_ALPHA_FORMAT
	_EGL_COLORSPACE_sRGB             = _EGL_VG_COLORSPACE_sRGB
	_EGL_COLORSPACE_LINEAR           = _EGL_VG_COLORSPACE_LINEAR
	_EGL_ALPHA_FORMAT_NONPRE         = _EGL_VG_ALPHA_FORMAT_NONPRE
	_EGL_ALPHA_FORMAT_PRE            = _EGL_VG_ALPHA_FORMAT_PRE
)
