package wayland

//#cgo pkg-config: wayland-egl
//#include "wayland-egl.h"
import "C"
import (
	"github.com/mortdeus/gowl"
	"unsafe"
)

type Window C.struct_wayland_egl_window

func Create(surface *gowl.Surface, width, height int) *Window {

	window := C.wl_egl_window_create(
		(*C.struct_wl_surface)(unsafe.Pointer((surface))),
		C.int(width),
		C.int(height))

	return (*Window)((*C.struct_wl_surface)(window))

}

func (window *Window) Destroy() {
	C.wl_egl_window_destroy((*C.struct_wl_egl_window)(unsafe.Pointer(window)))

}

func (window *Window) Resize(width, height, dx, dy int) {
	C.wl_egl_window_resize(
		(*C.struct_wl_egl_window)(unsafe.Pointer(window)),
		C.int(width),
		C.int(height),
		C.int(dx),
		C.int(dy))
}

func (window *Window) GetAttachedSize() (x int32, y int32) {
	C.wl_egl_window_get_attached_size(
		(*C.struct_wl_egl_window)(unsafe.Pointer(window)),
		(*C.int)(&x),
		(*C.int)(&y))
	return
}
